name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set up environment
      run: cp .env.example .env.local

    - name: Run type check
      run: npm run type-check

    - name: Run linting
      run: npm run lint

    - name: Build project
      run: npm run build

    - name: Test Electron build (Ubuntu only)
      if: matrix.node-version == '18.x'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        xvfb-run --auto-servernum npm run electron:build

  build-electron:
    needs: test
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set up environment
      run: cp .env.example .env.local

    - name: Build Electron app (macOS)
      if: runner.os == 'macOS'
      run: npm run dist:mac

    - name: Build Electron app (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        xvfb-run --auto-servernum npm run dist

    - name: Build Electron app (Windows)
      if: runner.os == 'Windows'
      run: npm run dist

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-app-${{ runner.os }}
        path: |
          dist-electron/*.dmg
          dist-electron/*.exe
          dist-electron/*.AppImage
          dist-electron/*.deb
        retention-days: 30

  deploy-web:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Set up environment
      run: cp .env.example .env.local

    - name: Build for production
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: dist/
        retention-days: 30
